/*
* 20170421 JH c135-public-display-tutor-profile-MP-jh CAM-135-select-tutor-public-profile-details-dml.sql created
* 20170424 JH c135-public-display-tutor-profile-MP-jh changed town and country code data type from INT to VARCHAR
*/


USE [xeno]
GO

/****** Object:  StoredProcedure [CAMPUS].[select-tutor-public-profile-details] ******/
IF EXISTS (
    SELECT * FROM sysobjects WHERE id = object_id(N'[CAMPUS].[select-tutor-public-profile-details]') AND OBJECTPROPERTY(id, N'IsTable') = 1
) 
BEGIN
	DROP PROCEDURE [CAMPUS].[select-tutor-public-profile-details] 
END
GO

/****** Object:  StoredProcedure [CAMPUS].[select-tutor-public-profile-details] ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [CAMPUS].[select-tutor-public-profile-details](
@isActive INT,
@isTutorRelated INT,
@confirmationStatus INT,
@tutorCode INT
)


AS 
BEGIN
	
	DECLARE @TutorResult TABLE (
	TUTORCODE INT,
	USERNAME VARCHAR(100),
	PASSWORD NVARCHAR(100),
	FIRSTNAME VARCHAR(35),
	MIDDLENAME VARCHAR(35),
	LASTNAME VARCHAR(35),
	GENDER INT,
	EMAIL VARCHAR(255),
	LANDPHONECOUNTRYCODE VARCHAR(10),
	LANDPHONEAREACODE VARCHAR(10),
	LANDPHONENUMBER VARCHAR(15),
	MOBILEPHONECOUNTRYCODE VARCHAR(10),
	MOBILEPHONENETWORKCODE VARCHAR(10),
	MOBILEPHONENUMBER VARCHAR(15),
	DESCRIPTION TEXT,
	EXPERIENCE TEXT,
	WEBLINK VARCHAR(200),
	FACEBOOKURL VARCHAR(200),
	TWITTERURL VARCHAR(100),
	MYSPACEURL VARCHAR(100),
	LINKEDINURL VARCHAR(100),
	INSTAGRAMURL VARCHAR(100),
	VIBERNUMBER VARCHAR(20),
	WHATSAPPNUMBER VARCHAR(20),
	ISAPPROVED INT,
	ADDRESS1 VARCHAR(50),
	ADDRESS2 VARCHAR(50),
	ADDRESS3 VARCHAR(50),
	TOWNCODE BIGINT,
	USERTYPE INT,
	CRTON DATE,
	CRTBY VARCHAR(20),
	MODON DATE,
	MODBY VARCHAR(20),
	TUTORSTATUS INT, 
	TOWN VARCHAR(255),
	COUNTRY VARCHAR(255),
	QUALIFICATIONCODE INT,
	QUALIFICATION VARCHAR(100),
	QDESCRIPTION VARCHAR(4000),
	QLEVEL VARCHAR(1000),
	TUTOREX INT,
	ORGANIZATION VARCHAR(250),
	INDUSTRY VARCHAR(100),
	JOBCATEGORY VARCHAR(100),
	COMMENCEDON DATE,
	COMPLETIONON DATE,
	MODULENAME VARCHAR(100),
	MODULECODE INT,
	MTUTOR INT,
	PROGRAMNAME VARCHAR(250),
	CPCODE INT,
	COURSEPROVIDRE VARCHAR(200),
	EMPTUTOR INT
	);

	SET NOCOUNT ON;

	BEGIN

	INSERT INTO @TutorResult

	SELECT t.*, tw.NAME AS TOWN, c.NAME AS COUNTRY, q.*, ex.*, md.*, emp.* FROM [xeno-4].[CAMPUS].[TUTOR] t
	INNER JOIN [CAMPUS].[TOWN] tw 
	ON t.TOWN = tw.CODE
	INNER JOIN [CAMPUS].[COUNTRY2] c
	ON tw.COUNTRY = c.CODE
	LEFT JOIN (
		SELECT tq.CODE AS QUALIFICATIONCODE, tq.NAME AS QUALIFICATION, tq.DESCRIPTION AS QDESCRIPTION, l.NAME AS QLEVEL
		FROM [CAMPUS].[TUTORQUALIFICATION] tq 
		INNER JOIN [CAMPUS].[LEVEL] l
		ON l.CODE = tq.LEVEL
		WHERE tq.ISACTIVE = @isActive) AS q
	ON q.QUALIFICATIONCODE = t.CODE
	LEFT JOIN (
		SELECT e.tutor AS TUTOREX, e.ORGANIZATION, m1.NAME AS INDUSTRY, m2.NAME AS JOBCATEGORY,
		e.COMMENCEDON, e.COMPLETIONON
		FROM [CAMPUS].[TUTORPROFESSIONALEXPERIENCE] e
		INNER JOIN [CAMPUS].[MAJOR] m1
		ON m1.CODE = e.INDUSTRY
		INNER JOIN [CAMPUS].[MAJOR] m2
		ON m2.CODE = e.JOBCATEGORY 
		WHERE e.ISACTIVE = @isActive) AS ex
	ON ex.TUTOREX = t.CODE
	LEFT JOIN (
		SELECT m.NAME AS MODULENAME, m.CODE AS MODULECODE, m.TUTOR AS MTUTOR,  p.NAME AS PROGRAMNAME FROM [CAMPUS].[MODULE] m
		INNER JOIN [CAMPUS].[SEMESTER] s
		ON m.SEMESTER = s.CODE
		INNER JOIN [CAMPUS].[PROGRAMME] p
		ON p.CODE = s.PROGRAMME
		WHERE m.ISTUTORRELATED = @isTutorRelated
		AND m.ISACTIVE = @isActive) AS md
	ON md.MTUTOR = t.CODE
	LEFT JOIN (
		SELECT cp.CODE AS CPCODE, cp.NAME AS COURSEPROVIDRE, em.TUTOR AS EMPTUTOR FROM [CAMPUS].[EMPLOYMENT] em
		INNER JOIN [CAMPUS].[COURSEPROVIDER] cp
		ON em.COURSEPROVIDER = cp.CODE 
		WHERE em.CONFIRMATIONSTATUS = @confirmationStatus ) AS emp
	ON t.CODE = emp.EMPTUTOR
	WHERE t.CODE = @tutorCode

	END

END


GO


